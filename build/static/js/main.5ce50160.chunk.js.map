{"version":3,"sources":["components/List.js","components/Input.js","components/TodoList.js","index.js"],"names":["List","props","renderTodos","done","data","map","todo","idx","onClick","toggle","checked","type","title","deleTodo","this","unfinish","filter","item","length","Component","Input","addnew","refs","inpt","value","obj","addTodo","inputdata","inp","input","console","log","htmlFor","id","ref","onChange","handleChange","bind","TodoList","e","setState","inpValue","target","state","todos","index","newTodos","JSON","parse","stringify","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"oLA6CeA,E,kDA3Cb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAORC,YAAY,SAACC,GACH,OAAO,EAAKF,MAAMG,KAAKC,KAAI,SAACC,EAAKC,GAC5B,GAAGJ,IAAOG,EAAKH,KACZ,OAAO,4BACN,2BACAK,QAAS,kBAAI,EAAKP,MAAMQ,OAAOF,IAC/BG,QAASP,EAAMQ,KAAK,aACtB,8BAAOL,EAAKM,OACZ,4BAAQJ,QAAS,kBAAI,EAAKP,MAAMY,SAASN,KAAzC,qBAhBC,E,2DAMhBO,KAAKb,MAAMY,SAASC,KAAKb,MAAMM,O,+BAiB/B,IACIQ,EAEJ,OADAA,EAFYD,KAAKb,MAAMG,KAERY,QAAO,SAAAC,GAAI,OAAGA,EAAKd,QAEhC,6BACG,uDAASY,EAASG,QACjB,4BACIJ,KAAKZ,aAAY,IAErB,wDACA,4BACIY,KAAKZ,aAAY,S,GAnCZiB,aCqCJC,E,kDApCV,WAAYnB,GAAO,IAAD,8BACd,cAAMA,IAEVoB,OAAO,WACH,GAAyB,IAAtB,EAAKC,KAAKC,KAAKC,MAAlB,CAGA,IAAIC,EAAI,CACJb,MAAM,EAAKU,KAAKC,KAAKC,MACrBrB,MAAK,GAET,EAAKF,MAAMyB,QAAQD,GACnB,EAAKH,KAAKC,KAAKC,MAAM,KAZP,EA8BrBG,UAAU,SAACC,GACT,EAAKC,MAAMD,EACXE,QAAQC,IAAI,EAAKP,QAhCE,E,qDAgBf,OACI,6BACI,2BAAOQ,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAI,OACJvB,KAAK,OACLwB,SAAUrB,KAAKb,MAAMmC,aAAaC,KAAKvB,QAE3C,4BAASN,QAASM,KAAKO,QAAvB,qB,GA1BKF,aCmENmB,E,kDAhEX,WAAYrC,GAAO,IAAD,8BACd,cAAMA,IAOVmC,aAAe,SAACG,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOlB,QACjCM,QAAQC,IAAI,EAAKY,MAAMF,WAVT,EAyBlBf,QAAQ,SAACtB,GACmB,IAArB,EAAKuC,MAAMF,UAId,EAAKD,SAAS,CACVI,MAAM,CACF,CACIhC,MAAO,EAAK+B,MAAMF,SAClBtC,MAAM,IAHT,mBAKE,EAAKwC,MAAMC,WApCR,EAyClB/B,SAAS,SAACN,GACF,EAAKiC,SAAS,CACXI,MAAM,EAAKD,MAAMC,MAAM5B,QAAO,SAACC,EAAK4B,GAAN,OAAcA,IAAQtC,QA3C7C,EA8ClBE,OAAO,SAACF,GAEJ,IAAIuC,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKN,MAAMC,QAClDE,EAASvC,GAAKJ,MAAM2C,EAASvC,GAAKJ,KAClC,EAAKqC,SAAS,CACVI,MAAME,KAjDV,EAAKH,MAAQ,CACTF,SAAS,GACTG,MAAM,IAEV,EAAKlB,QAAQ,EAAKA,QAAQW,KAAb,gBANC,E,gEAcb,IAAIO,EAAMM,aAAaC,QAAQ,SAC5BP,GACC9B,KAAK0B,SAAS,CACVI,MAAMG,KAAKC,MAAMJ,O,2CAM1B,OADAM,aAAaE,QAAQ,QAAQL,KAAKE,UAAUnC,KAAK6B,MAAMC,SAChD,I,+BAgCP,OACI,6BAEK,kBAAC,EAAD,CAAQlB,QAASZ,KAAKY,QAASU,aAActB,KAAKsB,eAClD,kBAAC,EAAD,CAAMhC,KAAMU,KAAK6B,MAAMC,MAAOnC,OAAQK,KAAKL,OAAQI,SAAUC,KAAKD,gB,GA5D5DM,aCEvBkC,IAASC,OACN,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5ce50160.chunk.js","sourcesContent":["import React ,{Component}from 'react';\r\nclass List extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    // this.toggle=this.toggle.bind(this);\r\n    // this.handleDelete=this.handleDelete.bind(this);\r\n  }\r\n  handleDelete(){\r\n    this.props.deleTodo(this.props.idx);\r\n  }\r\n  renderTodos=(done)=>{\r\n            return this.props.data.map((todo,idx)=>{//小括号只是简单的包裹块\r\n                 if(done===todo.done)\r\n                    return <li>\r\n                     <input\r\n                     onClick={()=>this.props.toggle(idx)} \r\n                     checked={done} type=\"checkbox\" />\r\n                   <span>{todo.title}</span>\r\n                   <button onClick={()=>this.props.deleTodo(idx)}>删除</button>  \r\n                 </li>\r\n             })//传参只能这样               \r\n         }\r\n  \r\n  \r\n  render(){\r\n    const todos=this.props.data;\r\n    let unfinish=[];\r\n    unfinish=todos.filter(item=>!item.done);\r\n    return(\r\n      <div>\r\n         <h2>正在进行{unfinish.length}</h2>\r\n          <ul>\r\n             {this.renderTodos(false)}\r\n           </ul>\r\n          <h2>已经完成</h2>\r\n          <ul>\r\n             {this.renderTodos(true)}\r\n          </ul>  \r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default List;","import React, { Component } from 'react'\r\n class Input extends Component {\r\n     constructor(props){\r\n         super(props);\r\n     }\r\n     addnew=()=>{\r\n         if(this.refs.inpt.value==''){\r\n             return;\r\n         }\r\n         var obj={\r\n             title:this.refs.inpt.value,\r\n             done:false\r\n         }\r\n         this.props.addTodo(obj);\r\n         this.refs.inpt.value='';\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor='inp'>todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref='inpt'\r\n                    type=\"text\" \r\n                    onChange={this.props.handleChange.bind(this)}\r\n                />\r\n                <button  onClick={this.addnew} >添加</button>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n  inputdata=(inp)=>{\r\n    this.input=inp;\r\n    console.log(this.value);\r\n\r\n  } \r\n}\r\nexport default Input;","import React, { Component } from 'react'\r\nimport List from './List'\r\nimport Input from './Input'\r\nclass TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inpValue:'',\r\n            todos:[]\r\n        }\r\n        this.addTodo=this.addTodo.bind(this);\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n        console.log(this.state.inpValue);\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n         let todos=localStorage.getItem('todos');\r\n         if(todos){\r\n             this.setState({\r\n                 todos:JSON.parse(todos)\r\n             })\r\n         }\r\n     }\r\n     componentDidUpdate(){\r\n        localStorage.setItem(\"todos\",JSON.stringify(this.state.todos)) \r\n        return true;\r\n    }\r\n    addTodo=(data)=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        \r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n    }\r\n    \r\n    deleTodo=(idx)=>{\r\n            this.setState({\r\n               todos:this.state.todos.filter((item,index)=>index!==idx)\r\n          });   \r\n        }\r\n    toggle=(idx)=>{\r\n    \r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[idx].done=!newTodos[idx].done;\r\n        this.setState({\r\n            todos:newTodos\r\n    })\r\n}\r\n    render() {\r\n        return (\r\n            <div>\r\n                 \r\n                 <Input  addTodo={this.addTodo} handleChange={this.handleChange}/>\r\n                 <List data={this.state.todos} toggle={this.toggle} deleTodo={this.deleTodo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './components/TodoList'\nimport List from './components/List'\nimport Input from './components/Input'\nReactDOM.render(\n   <TodoList />,\n   document.getElementById(\"root\")\n);\n// import  App from './pages/App';\n// import  Hoc,{Detail} from './pages/Hoc';\n// import Hook from './pages/Hook.js'\n// import Context from './pages/Context'\n// ReactDOM.render(\n//   //  <div><Hoc /> <Detail/></div>,\n//   <div>\n//   <Context.Provider value='123'>\n//     <Hook />\n//   </Context.Provider>\n//   </div>, \n//     document.getElementById('root')\n//   );\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Home from './pages/Home';\n// import Control from './components/Control';\n// console.log(200);\n// function Hello( props ) { \n//   console.log(props.name);\n// \treturn <h1>Hello { props.name }</h1>\n// } \n// ReactDOM.render(\n// \t<Hello name='React '/>, document.getElementById('root')\n// ); \n\n// ReactDOM.render(\n//   <Control />,\n//   document.getElementById('root')\n// );\n// export default Control;\n\n\n\n// // ReactDOM.render(\n// //   <div />,\n// //   document.getElementById('root')\n// // );\n// // const List=(props)=>{\n// //   return <ul>\n// //     {\n// //       props.data.map(\n// //       (item)=><li key={item.id}>{item.title}</li>\n// //       )\n// //     }\n// //   </ul>\n// // }\n\n// // class Home extends React.Component{\n// //   constructor(props){\n// //     super(props);\n// //     this.state={\n// //       data:[]\n// //     }\n// //     console.log(this.props);\n    \n// //   }\n// //   componentDidMount(){\n// //     fetch('https://cnodejs.org/api/v1/topics')\n// //     .then(res=>res.json())\n// //     .then(({data})=>{\n// //       this.setState({data});\n// //     })\n// //   }\n// //  getDate=(page)=>{\n// //     console.log(page);\n// //     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n// //      .then(res=>res.json())\n// //      .then(({data})=>{\n// //       this.setState({data});\n// //      })\n    \n// //  }\n// // render(){\n// //   const {data}=this.state;\n// //   const btns=[1,2,3,4,5];\n  \n\n// //   return <div>\n// //     {\n// //       btns.map((item)=><button\n// //        key={item} onClick={()=>this.getDate(item)}>\n// //          {item}\n// //          </button>)    \n// //     }\n// //     <List data={data} />\n// //   </div>\n// //  }\n// // }\n\n\n\n\n\n\n\n\n// // class Hello extends React.Component{\n// //   constructor(){\n// //        super();\n// //        this.state={\n// //          name:'mianhua'\n// //        }\n// //        setTimeout(() => {//箭头函数指向当前继承的对象\n// //          this.setState({name:'mujin'});//组件重新执行，值会发生变化\n// //        }, 3000);\n// //   }\n// //   render(){\n// //   return <div>\n// //   <div>name:{this.state.name}</div>\n// //   <h1>hello,{this.props.name}</h1>\n// //   </div>\n// //   } \n// // }\n// // ReactDOM.render(\n// //   <Hello name='南风木槿'/>,document.getElementById('root')\n// // );\n\n// //函数组件\n// //ui组件，木偶组件\n// // function App(props){\n// //   console.log(props);\n// //   const {title,name}=props;\n// //      return <div>\n// //        hello world,{name,title}\n// //      </div>\n// // }\n// //   ReactDOM.render(\n// //     <App name='react' title='id'/>,document.getElementById('root')\n// //   );\n// // let ele=<h1 id=\"title\">hello react</h1>;\n// // let ele=React.createElement('h1',{id:'title'},'hello react');\n// // let ele=<h1 id=\"title\" className='tit'>\n// //   hello world\n// // </h1>\n// // let ReactDOM={\n// //   render(eleObj,container){\n// //     //解构\n// //       const{\n// //         type,props\n// //       }=eleObj;\n// //       //创建第一层\n// //       let ele=document.createElement(type);\n// //       //遍历属性对象，将属性添加到第一层对象上\n// //       for (const prop in props) {\n// //         if(prop=='children'){\n// //           if(typeof props.children=='string'){\n// //             const txtNode=document.createTextNode(props.children);\n// //               ele.appendChild(txtNode);    \n// //               break;\n// //           }\n// //           props.children.forEach(child => {\n// //             if(typeof child=='string'){\n// //               const txtNode=document.createTextNode(child);\n// //               ele.appendChild(txtNode);            \n// //             }else{\n// //               ReactDOM.render(child,ele);\n// //             }\n            \n// //           });\n// //           // ele.setAttribute('class',props[prop]);\n// //         }else{\n// //             ele[prop]=props[prop];\n// //         }\n          \n        \n// //       }\n// //       //将第一层DOM节点添加到container中\n// //       container.appendChild(ele);\n// //   }\n// // }\n\n// // setInterval(() => {\n// //   let ele=<h1>{new Date().toLocaleString()}</h1>;\n// //   ReactDOM.render(\n// //   // <React.StrictMode>\n// //   //      <h1>hello react</h1>\n// //   // </React.StrictMode>,\n// //   ele,\n// //   document.getElementById('root')\n// // );\n  \n// // }, 1000);\n\n\n\n// /**\n//  1.1.原生js,DOM操作（jQuery）（必看）\n//  1.2.react：开发效率高，性能高\n//  1.3. 环境的搭建，创建一个项目，运行\n//  1.4.jsx语法\n//  */"],"sourceRoot":""}